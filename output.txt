package hello:
  var   a          int
  func  f          func()
  func  init       func()
  var   init$guard bool
  func  main       func()

# Name: hello.init
# Package: hello
# Synthetic: package initializer
func init():
0:                                                                entry P:0 S:2
	t0 = *init$guard                                                   bool
	if t0 goto 2 else 1
1:                                                           init.start P:1 S:1
	*init$guard = true:bool
	t1 = fmt.init()                                                      ()
	*a = 1:int
	jump 2
2:                                                            init.done P:2 S:0
	return

# Name: hello.f
# Package: hello
# Location: .\example\test\test1.txt:9:6
func f():
0:                                                                entry P:0 S:0
	*a = 2:int
	*a = 1:int
	return

# Name: hello.main
# Package: hello
# Location: .\example\test\test1.txt:14:6
func main():
0:                                                                entry P:0 S:0
	t0 = *a                                                             int
	t1 = new [1]any (varargs)                                       *[1]any
	t2 = &t1[0:int]                                                    *any
	t3 = make any <- int (t0)                                           any
	*t2 = t3
	t4 = slice t1[:]                                                  []any
	t5 = fmt.Println(t4...)                              (n int, err error)
	t6 = f()                                                             ()
	t7 = *a                                                             int
	t8 = new [1]any (varargs)                                       *[1]any
	t9 = &t8[0:int]                                                    *any
	t10 = make any <- int (t7)                                          any
	*t9 = t10
	t11 = slice t8[:]                                                 []any
	t12 = fmt.Println(t11...)                            (n int, err error)
	return

